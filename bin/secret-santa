#!/usr/bin/env ruby
#
# Christmas time requires a script for secret santa exchanges
#
# This uses a "climbing" algroithm. Modified from
# http://rubyquiz.com/quiz2.html
#

require 'optparse'

$options = {}

OptionParser.new do |opts|
  opts.banner = "Usage: secret-santa file_with_names.txt [OPTIONS]"

  opts.on("-s", "--same-house", "People with the same name can't get each other") do |h|
    $options[:same_house] = h
  end
end.parse!

class Person
  attr_reader :first, :last
  attr_accessor :santa

  def initialize(line)
    m = line.split
    @first = m[0].capitalize
    @last = m[1].capitalize
  end

  def can_be_santa_of?(other)
    return @last != other.last if $options[:same_house]

    self != other
  end
end

input = File.read(ARGV[0])

people = []
input.each_line do |line|
  line.strip!
  people << Person.new(line) unless line.empty?
end

santas = people.dup
people.each do |person|
  person.santa = santas.delete_at(rand(santas.size))
end

people.each do |person|
  unless person.santa.can_be_santa_of? person
    candidates = people.select { |p|
      p.santa.can_be_santa_of?(person) &&
      person.santa.can_be_santa_of?(p)
    }
    raise if candidates.empty?
    other = candidates[rand(candidates.size)]
    temp = person.santa
    person.santa = other.santa
    other.santa = temp
    finished = false
  end
end

people.each do |person|
  printf "%s %s -> %s %s\n", person.santa.first, person.santa.last,
    person.first, person.last
end